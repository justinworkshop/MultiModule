apply plugin: 'com.android.library'

def app_android = this.getRootProject().ext.app_android
def app_implementation = this.getRootProject().ext.app_implementation

android {
    compileSdkVersion app_android.compileSdkVersion
    buildToolsVersion app_android.buildToolsVersion


    defaultConfig {
        minSdkVersion app_android.minSdkVersion
        targetSdkVersion app_android.targetSdkVersion
        versionCode app_android.versionCode
        versionName app_android.versionName

        testInstrumentationRunner app_android.testInstrumentationRunner
        consumerProguardFiles 'consumer-rules.pro'

        println("common compile ----->")
        /* 编译期生成路径映射 */
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation app_implementation.appcompat
    testImplementation app_implementation.junit
    androidTestImplementation app_implementation.android_junit
    androidTestImplementation app_implementation.espresso

    /* ARouter */
    api 'com.alibaba:arouter-api:1.5.0'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'

    /* EventBus */
    api 'org.greenrobot:eventbus:3.2.0'

    /* Gson */
    api 'com.google.code.gson:gson:2.8.6'
}
